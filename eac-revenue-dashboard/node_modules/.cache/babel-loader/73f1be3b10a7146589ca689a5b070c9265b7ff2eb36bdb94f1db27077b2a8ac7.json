{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Sandra\\\\Documents\\\\RRA PROJECTS\\\\eac-revenue-dashboard (8)\\\\eac-revenue-dashboard\\\\src\\\\pages\\\\SecretaryDashboard.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { Box, Typography, Card, CardContent, TextField, Button, Grid, Select, MenuItem, InputLabel, FormControl, Avatar, Chip, Divider, Paper, List, ListItem, ListItemAvatar, ListItemText, Checkbox, IconButton, Badge } from '@mui/material';\nimport { Send as SendIcon, CalendarToday as DateIcon, Place as PlaceIcon, Description as ResolutionIcon, Person as PersonIcon, Flag as FlagIcon, Close as CloseIcon, Public as WorldIcon } from '@mui/icons-material';\nimport { motion } from 'framer-motion';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst SecretaryDashboard = () => {\n  _s();\n  // Form state\n  const [formData, setFormData] = useState({\n    meetingDate: '',\n    meetingPlace: '',\n    resolution: ''\n  });\n\n  // Selected recipients state (now can be from any country)\n  const [selectedRecipients, setSelectedRecipients] = useState([]);\n  const [currentCountry, setCurrentCountry] = useState('');\n\n  // Mock data structure\n  const countriesData = [{\n    name: 'Uganda',\n    code: 'UG',\n    flag: 'https://flagcdn.com/ug.svg',\n    authorities: [{\n      id: 'UG-1',\n      name: 'John Musinguzi',\n      position: 'Commissioner General',\n      authority: 'URA',\n      email: 'commissioner@ura.go.ug'\n    }, {\n      id: 'UG-2',\n      name: 'Sarah Nalwoga',\n      position: 'IT and Digitalization Sub Committee',\n      authority: 'URA',\n      email: 'it@ura.go.ug'\n    }]\n  }, {\n    name: 'Kenya',\n    code: 'KE',\n    flag: 'https://flagcdn.com/ke.svg',\n    authorities: [{\n      id: 'KE-1',\n      name: 'Githii Mburu',\n      position: 'Commissioner General',\n      authority: 'KRA',\n      email: 'commissioner@kra.go.ke'\n    }, {\n      id: 'KE-2',\n      name: 'Mary Wambui',\n      position: 'HR and Administration Sub Committee',\n      authority: 'KRA',\n      email: 'hr@kra.go.ke'\n    }]\n  }, {\n    name: 'Rwanda',\n    code: 'RW',\n    flag: 'https://flagcdn.com/rw.svg',\n    authorities: [{\n      id: 'RW-1',\n      name: 'Jean de Dieu Niyonzima',\n      position: 'Commissioner General',\n      authority: 'RRA',\n      email: 'j.niyonzima@rra.gov.rw'\n    }]\n  }, {\n    name: 'Tanzania',\n    code: 'TZ',\n    flag: 'https://flagcdn.com/tz.svg',\n    authorities: [{\n      id: 'TZ-1',\n      name: 'Alphayo Kidata',\n      position: 'Commissioner General',\n      authority: 'TRA',\n      email: 'commissioner@tra.go.tz'\n    }]\n  }];\n\n  // Get all recipients grouped by country\n  const getAllRecipients = () => {\n    return countriesData.flatMap(country => country.authorities.map(recipient => ({\n      ...recipient,\n      countryCode: country.code,\n      countryName: country.name,\n      countryFlag: country.flag\n    })));\n  };\n\n  // Handle country filter change\n  const handleCountryChange = e => {\n    setCurrentCountry(e.target.value);\n  };\n\n  // Handle recipient selection\n  const handleRecipientSelect = recipient => {\n    setSelectedRecipients(prev => {\n      const isSelected = prev.some(r => r.id === recipient.id);\n      if (isSelected) {\n        return prev.filter(r => r.id !== recipient.id);\n      } else {\n        return [...prev, recipient];\n      }\n    });\n  };\n\n  // Remove selected recipient\n  const handleRemoveRecipient = recipientId => {\n    setSelectedRecipients(prev => prev.filter(r => r.id !== recipientId));\n  };\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    const submissionData = {\n      ...formData,\n      recipients: selectedRecipients\n    };\n    console.log('Resolution submitted:', submissionData);\n    alert(`Resolution sent to ${selectedRecipients.length} recipient(s) across ${new Set(selectedRecipients.map(r => r.countryName)).size} countries!`);\n    setFormData({\n      meetingDate: '',\n      meetingPlace: '',\n      resolution: ''\n    });\n    setSelectedRecipients([]);\n    setCurrentCountry('');\n  };\n\n  // Filter recipients based on current country filter\n  const filteredRecipients = currentCountry ? getAllRecipients().filter(r => r.countryCode === currentCountry) : getAllRecipients();\n\n  // Get unique countries from selected recipients\n  const selectedCountries = [...new Set(selectedRecipients.map(r => r.countryCode))];\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      p: 3\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      gutterBottom: true,\n      sx: {\n        mb: 3\n      },\n      children: \"Secretary Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 3,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 8,\n        children: /*#__PURE__*/_jsxDEV(motion.div, {\n          initial: {\n            opacity: 0,\n            y: 20\n          },\n          animate: {\n            opacity: 1,\n            y: 0\n          },\n          transition: {\n            duration: 0.3\n          },\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            elevation: 3,\n            children: /*#__PURE__*/_jsxDEV(CardContent, {\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h6\",\n                gutterBottom: true,\n                sx: {\n                  mb: 3\n                },\n                children: \"Send New Resolution\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 204,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n                onSubmit: handleSubmit,\n                children: /*#__PURE__*/_jsxDEV(Grid, {\n                  container: true,\n                  spacing: 2,\n                  children: [/*#__PURE__*/_jsxDEV(Grid, {\n                    item: true,\n                    xs: 12,\n                    sm: 6,\n                    children: /*#__PURE__*/_jsxDEV(TextField, {\n                      fullWidth: true,\n                      label: \"Meeting Date\",\n                      type: \"date\",\n                      name: \"meetingDate\",\n                      value: formData.meetingDate,\n                      onChange: handleChange,\n                      required: true,\n                      InputLabelProps: {\n                        shrink: true\n                      },\n                      InputProps: {\n                        startAdornment: /*#__PURE__*/_jsxDEV(DateIcon, {\n                          color: \"action\",\n                          sx: {\n                            mr: 1\n                          }\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 222,\n                          columnNumber: 43\n                        }, this)\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 212,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 211,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                    item: true,\n                    xs: 12,\n                    sm: 6,\n                    children: /*#__PURE__*/_jsxDEV(TextField, {\n                      fullWidth: true,\n                      label: \"Meeting Place\",\n                      name: \"meetingPlace\",\n                      value: formData.meetingPlace,\n                      onChange: handleChange,\n                      required: true,\n                      InputProps: {\n                        startAdornment: /*#__PURE__*/_jsxDEV(PlaceIcon, {\n                          color: \"action\",\n                          sx: {\n                            mr: 1\n                          }\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 237,\n                          columnNumber: 43\n                        }, this)\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 229,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 228,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                    item: true,\n                    xs: 12,\n                    children: /*#__PURE__*/_jsxDEV(FormControl, {\n                      fullWidth: true,\n                      children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                        children: \"Filter by Country\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 245,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(Select, {\n                        value: currentCountry,\n                        onChange: handleCountryChange,\n                        label: \"Filter by Country\",\n                        children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                          value: \"\",\n                          children: /*#__PURE__*/_jsxDEV(\"em\", {\n                            children: \"All Countries\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 252,\n                            columnNumber: 29\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 251,\n                          columnNumber: 27\n                        }, this), countriesData.map(country => /*#__PURE__*/_jsxDEV(MenuItem, {\n                          value: country.code,\n                          children: /*#__PURE__*/_jsxDEV(Box, {\n                            sx: {\n                              display: 'flex',\n                              alignItems: 'center'\n                            },\n                            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                              src: country.flag,\n                              alt: country.name,\n                              style: {\n                                width: 20,\n                                marginRight: 8\n                              }\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 257,\n                              columnNumber: 33\n                            }, this), country.name]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 256,\n                            columnNumber: 31\n                          }, this)\n                        }, country.code, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 255,\n                          columnNumber: 29\n                        }, this))]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 246,\n                        columnNumber: 25\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 244,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 243,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                    item: true,\n                    xs: 12,\n                    children: [/*#__PURE__*/_jsxDEV(Typography, {\n                      variant: \"subtitle2\",\n                      gutterBottom: true,\n                      children: [\"Select Recipients (\", selectedRecipients.length, \" selected)\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 272,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(Paper, {\n                      elevation: 2,\n                      sx: {\n                        maxHeight: 300,\n                        overflow: 'auto',\n                        p: 1\n                      },\n                      children: /*#__PURE__*/_jsxDEV(List, {\n                        dense: true,\n                        children: filteredRecipients.map(recipient => {\n                          const isSelected = selectedRecipients.some(r => r.id === recipient.id);\n                          return /*#__PURE__*/_jsxDEV(ListItem, {\n                            secondaryAction: /*#__PURE__*/_jsxDEV(Checkbox, {\n                              edge: \"end\",\n                              checked: isSelected,\n                              onChange: () => handleRecipientSelect(recipient)\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 283,\n                              columnNumber: 35\n                            }, this),\n                            sx: {\n                              backgroundColor: isSelected ? 'action.selected' : 'inherit',\n                              borderLeft: `4px solid ${isSelected ? 'primary.main' : 'transparent'}`\n                            },\n                            children: [/*#__PURE__*/_jsxDEV(ListItemAvatar, {\n                              children: /*#__PURE__*/_jsxDEV(Badge, {\n                                overlap: \"circular\",\n                                anchorOrigin: {\n                                  vertical: 'bottom',\n                                  horizontal: 'right'\n                                },\n                                badgeContent: /*#__PURE__*/_jsxDEV(\"img\", {\n                                  src: recipient.countryFlag,\n                                  alt: recipient.countryName,\n                                  style: {\n                                    width: 20,\n                                    height: 20,\n                                    borderRadius: '50%',\n                                    border: '1px solid white'\n                                  }\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 299,\n                                  columnNumber: 39\n                                }, this),\n                                children: /*#__PURE__*/_jsxDEV(Avatar, {\n                                  children: recipient.name.charAt(0)\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 306,\n                                  columnNumber: 37\n                                }, this)\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 295,\n                                columnNumber: 35\n                              }, this)\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 294,\n                              columnNumber: 33\n                            }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n                              primary: recipient.name,\n                              secondary: /*#__PURE__*/_jsxDEV(_Fragment, {\n                                children: [/*#__PURE__*/_jsxDEV(Typography, {\n                                  component: \"span\",\n                                  variant: \"body2\",\n                                  display: \"block\",\n                                  children: recipient.position\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 313,\n                                  columnNumber: 39\n                                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                                  component: \"span\",\n                                  variant: \"body2\",\n                                  display: \"block\",\n                                  children: [recipient.authority, \" \\u2022 \", recipient.countryName]\n                                }, void 0, true, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 316,\n                                  columnNumber: 39\n                                }, this)]\n                              }, void 0, true)\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 309,\n                              columnNumber: 33\n                            }, this)]\n                          }, recipient.id, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 280,\n                            columnNumber: 31\n                          }, this);\n                        })\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 276,\n                        columnNumber: 25\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 275,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 271,\n                    columnNumber: 21\n                  }, this), selectedRecipients.length > 0 && /*#__PURE__*/_jsxDEV(Grid, {\n                    item: true,\n                    xs: 12,\n                    children: [/*#__PURE__*/_jsxDEV(Typography, {\n                      variant: \"subtitle2\",\n                      gutterBottom: true,\n                      children: [\"Selected Recipients (\", selectedRecipients.length, \")\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 332,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(Box, {\n                      sx: {\n                        display: 'flex',\n                        flexWrap: 'wrap',\n                        gap: 1,\n                        mb: 2\n                      },\n                      children: selectedRecipients.map(recipient => /*#__PURE__*/_jsxDEV(Chip, {\n                        label: `${recipient.name} (${recipient.countryName})`,\n                        onDelete: () => handleRemoveRecipient(recipient.id),\n                        avatar: /*#__PURE__*/_jsxDEV(Avatar, {\n                          src: recipient.countryFlag,\n                          children: recipient.name.charAt(0)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 342,\n                          columnNumber: 33\n                        }, this),\n                        variant: \"outlined\",\n                        deleteIcon: /*#__PURE__*/_jsxDEV(CloseIcon, {}, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 347,\n                          columnNumber: 43\n                        }, this)\n                      }, recipient.id, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 337,\n                        columnNumber: 29\n                      }, this))\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 335,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 331,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                    item: true,\n                    xs: 12,\n                    children: /*#__PURE__*/_jsxDEV(TextField, {\n                      fullWidth: true,\n                      label: \"Resolution\",\n                      name: \"resolution\",\n                      value: formData.resolution,\n                      onChange: handleChange,\n                      required: true,\n                      multiline: true,\n                      rows: 6,\n                      InputProps: {\n                        startAdornment: /*#__PURE__*/_jsxDEV(ResolutionIcon, {\n                          color: \"action\",\n                          sx: {\n                            mr: 1,\n                            mt: 1,\n                            alignSelf: 'flex-start'\n                          }\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 366,\n                          columnNumber: 43\n                        }, this)\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 356,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 355,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                    item: true,\n                    xs: 12,\n                    children: /*#__PURE__*/_jsxDEV(Button, {\n                      type: \"submit\",\n                      variant: \"contained\",\n                      color: \"primary\",\n                      size: \"large\",\n                      startIcon: /*#__PURE__*/_jsxDEV(SendIcon, {}, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 378,\n                        columnNumber: 36\n                      }, this),\n                      fullWidth: true,\n                      sx: {\n                        mt: 1\n                      },\n                      disabled: selectedRecipients.length === 0,\n                      children: [\"Send to \", selectedRecipients.length, \" Recipient(s)\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 373,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 372,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 209,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 208,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 203,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 4,\n        children: /*#__PURE__*/_jsxDEV(motion.div, {\n          initial: {\n            opacity: 0,\n            y: 20\n          },\n          animate: {\n            opacity: 1,\n            y: 0\n          },\n          transition: {\n            duration: 0.3,\n            delay: 0.1\n          },\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            elevation: 3,\n            children: /*#__PURE__*/_jsxDEV(CardContent, {\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h6\",\n                gutterBottom: true,\n                children: \"Recipient Information\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 402,\n                columnNumber: 17\n              }, this), selectedRecipients.length > 0 ? /*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  mt: 2\n                },\n                children: [/*#__PURE__*/_jsxDEV(Box, {\n                  sx: {\n                    display: 'flex',\n                    alignItems: 'center',\n                    mb: 2\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(WorldIcon, {\n                    color: \"primary\",\n                    sx: {\n                      mr: 1,\n                      fontSize: 30\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 409,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"h6\",\n                    children: [selectedCountries.length, \" Countries Selected\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 410,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 408,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Divider, {\n                  sx: {\n                    my: 2\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 415,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Box, {\n                  sx: {\n                    maxHeight: 400,\n                    overflow: 'auto'\n                  },\n                  children: selectedCountries.map(countryCode => {\n                    const country = countriesData.find(c => c.code === countryCode);\n                    const countryRecipients = selectedRecipients.filter(r => r.countryCode === countryCode);\n                    return /*#__PURE__*/_jsxDEV(Box, {\n                      sx: {\n                        mb: 3\n                      },\n                      children: [/*#__PURE__*/_jsxDEV(Box, {\n                        sx: {\n                          display: 'flex',\n                          alignItems: 'center',\n                          mb: 1\n                        },\n                        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                          src: country.flag,\n                          alt: country.name,\n                          style: {\n                            width: 20,\n                            marginRight: 8\n                          }\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 425,\n                          columnNumber: 31\n                        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                          variant: \"subtitle1\",\n                          children: [country.name, \" (\", countryRecipients.length, \")\"]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 430,\n                          columnNumber: 31\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 424,\n                        columnNumber: 29\n                      }, this), /*#__PURE__*/_jsxDEV(List, {\n                        dense: true,\n                        children: countryRecipients.map(recipient => /*#__PURE__*/_jsxDEV(ListItem, {\n                          children: [/*#__PURE__*/_jsxDEV(ListItemAvatar, {\n                            children: /*#__PURE__*/_jsxDEV(Avatar, {\n                              children: recipient.name.charAt(0)\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 439,\n                              columnNumber: 37\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 438,\n                            columnNumber: 35\n                          }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n                            primary: recipient.name,\n                            secondary: /*#__PURE__*/_jsxDEV(_Fragment, {\n                              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                                component: \"span\",\n                                variant: \"body2\",\n                                display: \"block\",\n                                children: recipient.position\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 445,\n                                columnNumber: 41\n                              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                                component: \"span\",\n                                variant: \"body2\",\n                                display: \"block\",\n                                children: recipient.email\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 448,\n                                columnNumber: 41\n                              }, this)]\n                            }, void 0, true)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 441,\n                            columnNumber: 35\n                          }, this)]\n                        }, recipient.id, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 437,\n                          columnNumber: 33\n                        }, this))\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 435,\n                        columnNumber: 29\n                      }, this)]\n                    }, countryCode, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 423,\n                      columnNumber: 27\n                    }, this);\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 417,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 407,\n                columnNumber: 19\n              }, this) : /*#__PURE__*/_jsxDEV(Paper, {\n                elevation: 0,\n                sx: {\n                  p: 3,\n                  textAlign: 'center',\n                  backgroundColor: 'action.hover'\n                },\n                children: [/*#__PURE__*/_jsxDEV(PersonIcon, {\n                  color: \"disabled\",\n                  sx: {\n                    fontSize: 40,\n                    mb: 1\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 468,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body1\",\n                  color: \"text.secondary\",\n                  children: \"Select recipients from any country\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 469,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 463,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 401,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 400,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 395,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 394,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 189,\n    columnNumber: 5\n  }, this);\n};\n_s(SecretaryDashboard, \"MQsnL/hMUdBJ/91wMiEro8umhp8=\");\n_c = SecretaryDashboard;\nexport default SecretaryDashboard;\nvar _c;\n$RefreshReg$(_c, \"SecretaryDashboard\");","map":{"version":3,"names":["useState","Box","Typography","Card","CardContent","TextField","Button","Grid","Select","MenuItem","InputLabel","FormControl","Avatar","Chip","Divider","Paper","List","ListItem","ListItemAvatar","ListItemText","Checkbox","IconButton","Badge","Send","SendIcon","CalendarToday","DateIcon","Place","PlaceIcon","Description","ResolutionIcon","Person","PersonIcon","Flag","FlagIcon","Close","CloseIcon","Public","WorldIcon","motion","jsxDEV","_jsxDEV","Fragment","_Fragment","SecretaryDashboard","_s","formData","setFormData","meetingDate","meetingPlace","resolution","selectedRecipients","setSelectedRecipients","currentCountry","setCurrentCountry","countriesData","name","code","flag","authorities","id","position","authority","email","getAllRecipients","flatMap","country","map","recipient","countryCode","countryName","countryFlag","handleCountryChange","e","target","value","handleRecipientSelect","prev","isSelected","some","r","filter","handleRemoveRecipient","recipientId","handleChange","handleSubmit","preventDefault","submissionData","recipients","console","log","alert","length","Set","size","filteredRecipients","selectedCountries","sx","p","children","variant","gutterBottom","mb","fileName","_jsxFileName","lineNumber","columnNumber","container","spacing","item","xs","md","div","initial","opacity","y","animate","transition","duration","elevation","onSubmit","sm","fullWidth","label","type","onChange","required","InputLabelProps","shrink","InputProps","startAdornment","color","mr","display","alignItems","src","alt","style","width","marginRight","maxHeight","overflow","dense","secondaryAction","edge","checked","backgroundColor","borderLeft","overlap","anchorOrigin","vertical","horizontal","badgeContent","height","borderRadius","border","charAt","primary","secondary","component","flexWrap","gap","onDelete","avatar","deleteIcon","multiline","rows","mt","alignSelf","startIcon","disabled","delay","fontSize","my","find","c","countryRecipients","textAlign","_c","$RefreshReg$"],"sources":["C:/Users/Sandra/Documents/RRA PROJECTS/eac-revenue-dashboard (8)/eac-revenue-dashboard/src/pages/SecretaryDashboard.js"],"sourcesContent":["import { useState } from 'react';\r\nimport { \r\n  Box, \r\n  Typography, \r\n  Card, \r\n  CardContent, \r\n  TextField, \r\n  Button, \r\n  Grid,\r\n  Select,\r\n  MenuItem,\r\n  InputLabel,\r\n  FormControl,\r\n  Avatar,\r\n  Chip,\r\n  Divider,\r\n  Paper,\r\n  List,\r\n  ListItem,\r\n  ListItemAvatar,\r\n  ListItemText,\r\n  Checkbox,\r\n  IconButton,\r\n  Badge\r\n} from '@mui/material';\r\nimport { \r\n  Send as SendIcon,\r\n  CalendarToday as DateIcon,\r\n  Place as PlaceIcon,\r\n  Description as ResolutionIcon,\r\n  Person as PersonIcon,\r\n  Flag as FlagIcon,\r\n  Close as CloseIcon,\r\n  Public as WorldIcon\r\n} from '@mui/icons-material';\r\nimport { motion } from 'framer-motion';\r\n\r\nconst SecretaryDashboard = () => {\r\n  // Form state\r\n  const [formData, setFormData] = useState({\r\n    meetingDate: '',\r\n    meetingPlace: '',\r\n    resolution: ''\r\n  });\r\n\r\n  // Selected recipients state (now can be from any country)\r\n  const [selectedRecipients, setSelectedRecipients] = useState([]);\r\n  const [currentCountry, setCurrentCountry] = useState('');\r\n\r\n  // Mock data structure\r\n  const countriesData = [\r\n    {\r\n      name: 'Uganda',\r\n      code: 'UG',\r\n      flag: 'https://flagcdn.com/ug.svg',\r\n      authorities: [\r\n        {\r\n          id: 'UG-1',\r\n          name: 'John Musinguzi',\r\n          position: 'Commissioner General',\r\n          authority: 'URA',\r\n          email: 'commissioner@ura.go.ug'\r\n        },\r\n        {\r\n          id: 'UG-2',\r\n          name: 'Sarah Nalwoga',\r\n          position: 'IT and Digitalization Sub Committee',\r\n          authority: 'URA',\r\n          email: 'it@ura.go.ug'\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      name: 'Kenya',\r\n      code: 'KE',\r\n      flag: 'https://flagcdn.com/ke.svg',\r\n      authorities: [\r\n        {\r\n          id: 'KE-1',\r\n          name: 'Githii Mburu',\r\n          position: 'Commissioner General',\r\n          authority: 'KRA',\r\n          email: 'commissioner@kra.go.ke'\r\n        },\r\n        {\r\n          id: 'KE-2',\r\n          name: 'Mary Wambui',\r\n          position: 'HR and Administration Sub Committee',\r\n          authority: 'KRA',\r\n          email: 'hr@kra.go.ke'\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      name: 'Rwanda',\r\n      code: 'RW',\r\n      flag: 'https://flagcdn.com/rw.svg',\r\n      authorities: [\r\n        {\r\n          id: 'RW-1',\r\n          name: 'Jean de Dieu Niyonzima',\r\n          position: 'Commissioner General',\r\n          authority: 'RRA',\r\n          email: 'j.niyonzima@rra.gov.rw'\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      name: 'Tanzania',\r\n      code: 'TZ',\r\n      flag: 'https://flagcdn.com/tz.svg',\r\n      authorities: [\r\n        {\r\n          id: 'TZ-1',\r\n          name: 'Alphayo Kidata',\r\n          position: 'Commissioner General',\r\n          authority: 'TRA',\r\n          email: 'commissioner@tra.go.tz'\r\n        }\r\n      ]\r\n    }\r\n  ];\r\n\r\n  // Get all recipients grouped by country\r\n  const getAllRecipients = () => {\r\n    return countriesData.flatMap(country => \r\n      country.authorities.map(recipient => ({\r\n        ...recipient,\r\n        countryCode: country.code,\r\n        countryName: country.name,\r\n        countryFlag: country.flag\r\n      }))\r\n    );\r\n  };\r\n\r\n  // Handle country filter change\r\n  const handleCountryChange = (e) => {\r\n    setCurrentCountry(e.target.value);\r\n  };\r\n\r\n  // Handle recipient selection\r\n  const handleRecipientSelect = (recipient) => {\r\n    setSelectedRecipients(prev => {\r\n      const isSelected = prev.some(r => r.id === recipient.id);\r\n      if (isSelected) {\r\n        return prev.filter(r => r.id !== recipient.id);\r\n      } else {\r\n        return [...prev, recipient];\r\n      }\r\n    });\r\n  };\r\n\r\n  // Remove selected recipient\r\n  const handleRemoveRecipient = (recipientId) => {\r\n    setSelectedRecipients(prev => prev.filter(r => r.id !== recipientId));\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData(prev => ({ ...prev, [name]: value }));\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const submissionData = {\r\n      ...formData,\r\n      recipients: selectedRecipients\r\n    };\r\n    console.log('Resolution submitted:', submissionData);\r\n    alert(`Resolution sent to ${selectedRecipients.length} recipient(s) across ${new Set(selectedRecipients.map(r => r.countryName)).size} countries!`);\r\n    setFormData({\r\n      meetingDate: '',\r\n      meetingPlace: '',\r\n      resolution: ''\r\n    });\r\n    setSelectedRecipients([]);\r\n    setCurrentCountry('');\r\n  };\r\n\r\n  // Filter recipients based on current country filter\r\n  const filteredRecipients = currentCountry \r\n    ? getAllRecipients().filter(r => r.countryCode === currentCountry)\r\n    : getAllRecipients();\r\n\r\n  // Get unique countries from selected recipients\r\n  const selectedCountries = [...new Set(selectedRecipients.map(r => r.countryCode))];\r\n\r\n  return (\r\n    <Box sx={{ p: 3 }}>\r\n      <Typography variant=\"h4\" gutterBottom sx={{ mb: 3 }}>\r\n        Secretary Dashboard\r\n      </Typography>\r\n      \r\n      <Grid container spacing={3}>\r\n        {/* Resolution Form */}\r\n        <Grid item xs={12} md={8}>\r\n          <motion.div\r\n            initial={{ opacity: 0, y: 20 }}\r\n            animate={{ opacity: 1, y: 0 }}\r\n            transition={{ duration: 0.3 }}\r\n          >\r\n            <Card elevation={3}>\r\n              <CardContent>\r\n                <Typography variant=\"h6\" gutterBottom sx={{ mb: 3 }}>\r\n                  Send New Resolution\r\n                </Typography>\r\n                \r\n                <form onSubmit={handleSubmit}>\r\n                  <Grid container spacing={2}>\r\n                    {/* Meeting Date */}\r\n                    <Grid item xs={12} sm={6}>\r\n                      <TextField\r\n                        fullWidth\r\n                        label=\"Meeting Date\"\r\n                        type=\"date\"\r\n                        name=\"meetingDate\"\r\n                        value={formData.meetingDate}\r\n                        onChange={handleChange}\r\n                        required\r\n                        InputLabelProps={{ shrink: true }}\r\n                        InputProps={{\r\n                          startAdornment: <DateIcon color=\"action\" sx={{ mr: 1 }} />\r\n                        }}\r\n                      />\r\n                    </Grid>\r\n                    \r\n                    {/* Meeting Place */}\r\n                    <Grid item xs={12} sm={6}>\r\n                      <TextField\r\n                        fullWidth\r\n                        label=\"Meeting Place\"\r\n                        name=\"meetingPlace\"\r\n                        value={formData.meetingPlace}\r\n                        onChange={handleChange}\r\n                        required\r\n                        InputProps={{\r\n                          startAdornment: <PlaceIcon color=\"action\" sx={{ mr: 1 }} />\r\n                        }}\r\n                      />\r\n                    </Grid>\r\n                    \r\n                    {/* Country Filter (optional) */}\r\n                    <Grid item xs={12}>\r\n                      <FormControl fullWidth>\r\n                        <InputLabel>Filter by Country</InputLabel>\r\n                        <Select\r\n                          value={currentCountry}\r\n                          onChange={handleCountryChange}\r\n                          label=\"Filter by Country\"\r\n                        >\r\n                          <MenuItem value=\"\">\r\n                            <em>All Countries</em>\r\n                          </MenuItem>\r\n                          {countriesData.map((country) => (\r\n                            <MenuItem key={country.code} value={country.code}>\r\n                              <Box sx={{ display: 'flex', alignItems: 'center' }}>\r\n                                <img \r\n                                  src={country.flag} \r\n                                  alt={country.name} \r\n                                  style={{ width: 20, marginRight: 8 }} \r\n                                />\r\n                                {country.name}\r\n                              </Box>\r\n                            </MenuItem>\r\n                          ))}\r\n                        </Select>\r\n                      </FormControl>\r\n                    </Grid>\r\n                    \r\n                    {/* Recipient Selection */}\r\n                    <Grid item xs={12}>\r\n                      <Typography variant=\"subtitle2\" gutterBottom>\r\n                        Select Recipients ({selectedRecipients.length} selected)\r\n                      </Typography>\r\n                      <Paper elevation={2} sx={{ maxHeight: 300, overflow: 'auto', p: 1 }}>\r\n                        <List dense>\r\n                          {filteredRecipients.map((recipient) => {\r\n                            const isSelected = selectedRecipients.some(r => r.id === recipient.id);\r\n                            return (\r\n                              <ListItem \r\n                                key={recipient.id}\r\n                                secondaryAction={\r\n                                  <Checkbox\r\n                                    edge=\"end\"\r\n                                    checked={isSelected}\r\n                                    onChange={() => handleRecipientSelect(recipient)}\r\n                                  />\r\n                                }\r\n                                sx={{\r\n                                  backgroundColor: isSelected ? 'action.selected' : 'inherit',\r\n                                  borderLeft: `4px solid ${isSelected ? 'primary.main' : 'transparent'}`\r\n                                }}\r\n                              >\r\n                                <ListItemAvatar>\r\n                                  <Badge\r\n                                    overlap=\"circular\"\r\n                                    anchorOrigin={{ vertical: 'bottom', horizontal: 'right' }}\r\n                                    badgeContent={\r\n                                      <img \r\n                                        src={recipient.countryFlag} \r\n                                        alt={recipient.countryName}\r\n                                        style={{ width: 20, height: 20, borderRadius: '50%', border: '1px solid white' }}\r\n                                      />\r\n                                    }\r\n                                  >\r\n                                    <Avatar>{recipient.name.charAt(0)}</Avatar>\r\n                                  </Badge>\r\n                                </ListItemAvatar>\r\n                                <ListItemText\r\n                                  primary={recipient.name}\r\n                                  secondary={\r\n                                    <>\r\n                                      <Typography component=\"span\" variant=\"body2\" display=\"block\">\r\n                                        {recipient.position}\r\n                                      </Typography>\r\n                                      <Typography component=\"span\" variant=\"body2\" display=\"block\">\r\n                                        {recipient.authority} • {recipient.countryName}\r\n                                      </Typography>\r\n                                    </>\r\n                                  }\r\n                                />\r\n                              </ListItem>\r\n                            );\r\n                          })}\r\n                        </List>\r\n                      </Paper>\r\n                    </Grid>\r\n                    \r\n                    {/* Selected Recipients Preview */}\r\n                    {selectedRecipients.length > 0 && (\r\n                      <Grid item xs={12}>\r\n                        <Typography variant=\"subtitle2\" gutterBottom>\r\n                          Selected Recipients ({selectedRecipients.length})\r\n                        </Typography>\r\n                        <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 1, mb: 2 }}>\r\n                          {selectedRecipients.map(recipient => (\r\n                            <Chip\r\n                              key={recipient.id}\r\n                              label={`${recipient.name} (${recipient.countryName})`}\r\n                              onDelete={() => handleRemoveRecipient(recipient.id)}\r\n                              avatar={\r\n                                <Avatar src={recipient.countryFlag}>\r\n                                  {recipient.name.charAt(0)}\r\n                                </Avatar>\r\n                              }\r\n                              variant=\"outlined\"\r\n                              deleteIcon={<CloseIcon />}\r\n                            />\r\n                          ))}\r\n                        </Box>\r\n                      </Grid>\r\n                    )}\r\n                    \r\n                    {/* Resolution Text */}\r\n                    <Grid item xs={12}>\r\n                      <TextField\r\n                        fullWidth\r\n                        label=\"Resolution\"\r\n                        name=\"resolution\"\r\n                        value={formData.resolution}\r\n                        onChange={handleChange}\r\n                        required\r\n                        multiline\r\n                        rows={6}\r\n                        InputProps={{\r\n                          startAdornment: <ResolutionIcon color=\"action\" sx={{ mr: 1, mt: 1, alignSelf: 'flex-start' }} />\r\n                        }}\r\n                      />\r\n                    </Grid>\r\n                    \r\n                    {/* Submit Button */}\r\n                    <Grid item xs={12}>\r\n                      <Button\r\n                        type=\"submit\"\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        size=\"large\"\r\n                        startIcon={<SendIcon />}\r\n                        fullWidth\r\n                        sx={{ mt: 1 }}\r\n                        disabled={selectedRecipients.length === 0}\r\n                      >\r\n                        Send to {selectedRecipients.length} Recipient(s)\r\n                      </Button>\r\n                    </Grid>\r\n                  </Grid>\r\n                </form>\r\n              </CardContent>\r\n            </Card>\r\n          </motion.div>\r\n        </Grid>\r\n        \r\n        {/* Selected Recipient Info */}\r\n        <Grid item xs={12} md={4}>\r\n          <motion.div\r\n            initial={{ opacity: 0, y: 20 }}\r\n            animate={{ opacity: 1, y: 0 }}\r\n            transition={{ duration: 0.3, delay: 0.1 }}\r\n          >\r\n            <Card elevation={3}>\r\n              <CardContent>\r\n                <Typography variant=\"h6\" gutterBottom>\r\n                  Recipient Information\r\n                </Typography>\r\n                \r\n                {selectedRecipients.length > 0 ? (\r\n                  <Box sx={{ mt: 2 }}>\r\n                    <Box sx={{ display: 'flex', alignItems: 'center', mb: 2 }}>\r\n                      <WorldIcon color=\"primary\" sx={{ mr: 1, fontSize: 30 }} />\r\n                      <Typography variant=\"h6\">\r\n                        {selectedCountries.length} Countries Selected\r\n                      </Typography>\r\n                    </Box>\r\n                    \r\n                    <Divider sx={{ my: 2 }} />\r\n                    \r\n                    <Box sx={{ maxHeight: 400, overflow: 'auto' }}>\r\n                      {selectedCountries.map(countryCode => {\r\n                        const country = countriesData.find(c => c.code === countryCode);\r\n                        const countryRecipients = selectedRecipients.filter(r => r.countryCode === countryCode);\r\n                        \r\n                        return (\r\n                          <Box key={countryCode} sx={{ mb: 3 }}>\r\n                            <Box sx={{ display: 'flex', alignItems: 'center', mb: 1 }}>\r\n                              <img \r\n                                src={country.flag} \r\n                                alt={country.name} \r\n                                style={{ width: 20, marginRight: 8 }} \r\n                              />\r\n                              <Typography variant=\"subtitle1\">\r\n                                {country.name} ({countryRecipients.length})\r\n                              </Typography>\r\n                            </Box>\r\n                            \r\n                            <List dense>\r\n                              {countryRecipients.map(recipient => (\r\n                                <ListItem key={recipient.id}>\r\n                                  <ListItemAvatar>\r\n                                    <Avatar>{recipient.name.charAt(0)}</Avatar>\r\n                                  </ListItemAvatar>\r\n                                  <ListItemText\r\n                                    primary={recipient.name}\r\n                                    secondary={\r\n                                      <>\r\n                                        <Typography component=\"span\" variant=\"body2\" display=\"block\">\r\n                                          {recipient.position}\r\n                                        </Typography>\r\n                                        <Typography component=\"span\" variant=\"body2\" display=\"block\">\r\n                                          {recipient.email}\r\n                                        </Typography>\r\n                                      </>\r\n                                    }\r\n                                  />\r\n                                </ListItem>\r\n                              ))}\r\n                            </List>\r\n                          </Box>\r\n                        );\r\n                      })}\r\n                    </Box>\r\n                  </Box>\r\n                ) : (\r\n                  <Paper elevation={0} sx={{ \r\n                    p: 3, \r\n                    textAlign: 'center',\r\n                    backgroundColor: 'action.hover'\r\n                  }}>\r\n                    <PersonIcon color=\"disabled\" sx={{ fontSize: 40, mb: 1 }} />\r\n                    <Typography variant=\"body1\" color=\"text.secondary\">\r\n                      Select recipients from any country\r\n                    </Typography>\r\n                  </Paper>\r\n                )}\r\n              </CardContent>\r\n            </Card>\r\n          </motion.div>\r\n        </Grid>\r\n      </Grid>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default SecretaryDashboard;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}